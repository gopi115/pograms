#include<stdio.h>
int fractionalknapsack(int n, int w[],int v[],int c){
	int t[n+1][c+1],i,j;
	for(i=0;i<=n;i++)
	    for(j=0;j<=c;j++){
		    t[i][0]=0;
		    t[0][j]=0;
	    }
	for(i=1;i<=n;i++){
		for(j=1;j<=c;j++){
			if(j-w[i]<0)
				t[i][j]=t[i-1][j];
			else
				t[i][j]=max(t[i-1][j],v[i]+t[i-1][j-w[i]]);
		}
	}
	return t[n][c];
}

int max(int a,int b){
	return (a>b)?a:b;
}
main(){
	int n,i,capacity;
	printf("size : ");
	scanf("%d",&n);
	int a[n+1],b[n+1];
	printf("value && weight : \n");
	for(i=1;i<=n;i++)
		scanf("%d%d",&a[i],&b[i]);
	printf("capacity: ");
	scanf("%d",&capacity);
	printf("/maximum profit: %d",fractionalknapsack(n,a,b,capacity));
}
